plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-validation:3.5.0')
    implementation("org.bouncycastle:bcprov-jdk15on:1.70")
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.flywaydb:flyway-core')
    implementation('org.flywaydb:flyway-database-postgresql')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.postgresql:postgresql:42.7.2')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    implementation('com.fasterxml.jackson.core:jackson-annotations:3.0-rc3')
    implementation('org.springframework.boot:spring-boot-starter-amqp')
    implementation('org.springframework.kafka:spring-kafka:4.0.0-M2')
    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch:3.2.10')
    implementation('org.springframework.data:spring-data-redis:4.0.0-M3')
    implementation('io.lettuce:lettuce-core:6.5.3.RELEASE')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jdk8')
    implementation('io.jsonwebtoken:jjwt-api:0.12.6')
    implementation('org.springframework.boot:spring-boot-starter-security')
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers:3.2.10'
    testImplementation 'org.springframework.kafka:spring-kafka-test:4.0.0-M2'
    testImplementation 'org.mockito:mockito-core'
    testImplementation "org.testcontainers:testcontainers:1.19.3"
    testImplementation "org.testcontainers:elasticsearch:1.19.3"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'org.apache.kafka:kafka-server-common:4.0.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    jvmArgs += "-javaagent:${classpath.find { it.name.contains('mockito-core') }} "
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

